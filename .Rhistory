chisq.test(med)$Xsquared.value
chisq.test(med)$xsquared.value
chisq.test(med)[0]
chisq.test(med)[1]
chisq.test(med)[[1]]
chisq.test(med)[[[1]]]
chisq.test(med)[[1]]
chisq.test(med)
tmp <- chisq.test(med)
class(tmp)
4.0489 * 1.4
class(tmp)
tmp
tmp[[1]]
class(tmp[[1]])
attributes(tmp)
unclass(tmp)
tmp$statistic
unclass(tmp$statistic)
class(tmp$statistic)
attributes(tmp$statistic)
tmp$statistic$names
tmp$statistic$[1]
tmp$statistic$[0]
tmp$statistic
foo <- tmp$statistic
foo[1]
foo[0]
foo[2]
foo[1]
attributes(foo)
foo$names
as.integer(foo)
as.double(foo)
chisq <- (as.double(tmp$statistic))
chisq
sqrt(chisq/(4+chisq))
cc <- sqrt(chisq/(4+chisq))
cckorr <- cc*sqrt(2)
cckorr
View(med)
test <- matrix(c(14,22,32,14,10,4,16,8,0),nr=3)
test
med
test <- matrix(c(14,22,32,14,10,4,16,8,0),nc=3)
test
test <- matrix(c(14,14,16,22,10,8,32,4,0),nr=3)
test
chisq <- as.double(chisq.test(test)$statistic)
length(test)
test
nrow(test)
ncol(test)
min(nrow(test),ncol(test))
min(4,25,3)
minkm <- min(nrow(test),ncol(test))
minkm
ckorr <- (sqrt(chisq/(length(test)+chisq))) * sqrt(minkm/(minkm-1))
sum(test)
ckorr <- (sqrt(chisq/(sum(test)+chisq))) * sqrt(minkm/(minkm-1))
tabelle <- matrix(c(15,8,8,17),nr=2)
chisq <- as.double(chisq.test(tabelle)$statistic)
minkm <- min(nrow(tabelle),ncol(tabelle))
ckorr <- (sqrt(chisq/(sum(tabelle)+chisq))) * sqrt(minkm/(minkm-1))
ckorr
tabelle <- matrix(c(20,3,19,6),nr=2)
chisq <- as.double(chisq.test(tabelle)$statistic)
minkm <- min(nrow(tabelle),ncol(tabelle))
ckorr
ckorr <- (sqrt(chisq/(sum(tabelle)+chisq))) * sqrt(minkm/(minkm-1))
ckorr
azs <- c(608,336,352,576,384,544,576,512)
gr <- c(442,257,278,420,291,398,422,380)
plot(azs,gr)
cor(azs,gr)
cor(rank(azs),rank(gr)
)
azs <- c(608,336,352,576,384,544,576,512)
gw <- c(442,257,278,420,291,398,422,380)
plot(azs,gr)
plot(azs,gr)
plot(azs,gw)
mean(gw)
lm(azs,gw)
df <- data.frame(
azs <- azs,
gw <- gw)
lm(df)
400*1.501 - 55.851
400*(1/1.501) - 55.851
400*(1/1.501) + 55.851
azs/gw
gw/aza
gw/azs
sqrt(prod(gw/azs))
?sqrt
sqrt(prod(gw/azs),3)
?sqrt
sqrt(3,prod(gw/azs))
sqrt(prod(gw/azs))
prod(gw/azs)^(1/length(gw))
400*.7465972
sum(gw/azs)/(length(gw))
400*.7468813
model <- lm(gw ~ azs, df)
model
.6651*(400) + 37.7838
model$coefficients
model$xlevels
model$coefficients
model$coefficients[1]
model$coefficients[2]
unclass(model$coefficients)
attributes(model$coefficients)
model$coefficients$azs
model$coefficients[3]
model$coefficients[2]
as.double(model$coefficients[2])
model$coefficients[2]*2
model$coefficients[2]*400 + model$coefficients[1]
s400 <- model$coefficients[2]*400 + model$coefficients[1]
s400
class(s400)
unclass(s400)
unname(model$coefficients[2])*400 + model$coefficients[1]
unname(model$coefficients[2]*400 + model$coefficients[1])
a <- (c("brasil","croatia")
)
b <- (c("spain","chile"))
c <- c("colombia","greece")
d <- c("uruguay","italy")
e <- c("switzerland", "france")
f <- c("argentina", "bosnia-herz")
g <- c("germany", "portugal")
h <- c("russia","belgium")
r16 <- data.frame()
a <- a,
r16 <- data.frame(
a <- a,
b <- b,
c <- c,
d <- d,
e <- e,
f <- f,
g <- g,
h <- h)
r16
r16
r16
qf <- data.frame(
m60 <- c("argentina","france")
)
qf <- data.frame(
m60 <- c("argentina","portugal")
m57 <- c("brasil","uruguay")
qf <- data.frame(
m60 <- c("argentina","portugal"),
m57 <- c("brasil","uruguay"),
m58 <- c("switzerland","germany"),
m59 <- c("spain","croatia")
)
sf <- data.frame()
sf <- data.frame(
m61 <- c("brasil","germany"),
qf$m59....c..spain....croatia.. <- NULL
qf
qf
qf$m59....c..spain....croatia.. <- c("spain","italy")
qf
expression(x^2)
plot(expression(x^2))
expression(alpha <= beta)
?plotmath
D(expression(x/1+x^2),'x')
D(expression(x/(1+x^2)),'x')
D(expression(x^3),'x')
D(expression(x/(1+x^2)),'x')
D(expression((1-x^2)/((1+x^2)^2)),'x')
D(expression((x/(1-x^2))),'x')
D(expression((x/(1-x^2))),'x',2)
DD(expression((x/(1-x^2))),'x',2)
lm()
?lm
??Regression
??curvilinear
??curv
fx <- function(e) {}
fx <- function(e) {
i <- 0
num <- 0
while(i<10*e) {}
while(i<10*e) {
num <- num + ((e^i)/(factorial(i)))
i <- i + 1
}
num
}
fx(1)
fx <- function(e) {
+ i <- 0
+ num <- 0
+ while(i<10*e) {}
+ while(i<10*e) {
+ num <- num + ((e^i)/(factorial(i)))
+ i <- i + 1
}
message(num)}
fx(1)
fx <- function(e) {
+ i <- 0
+ num <- 0
+ while(i<10*e) {}
+ while(i<10*e) {
+ num <- num + ((e^i)/(factorial(i)))
+ i <- i + 1}
message(num)}
fx(1)
fx <- function(e) {
i <- 0
num <- 0
while(i<10*e) {}
while(i<10*e) {
num <- num + ((e^i)/(factorial(i)))
i <- i + 1}
message(num)}
fx(1)
fx <- function(e) {}
fx <- function(e) {
i <- 0
num <- 0
while(i<e) {
num <- num + ((e^i)/(factorial(i)))
i <- i + 1
}
message(num)}
fx(1)
fx(10)
fx <- function(e) {
i <- 0
num <- 0
while(i<(10*e)) {
num <- num + ((e^i)/(factorial(i)))
}
message(num)}
fx(1)
fx <- function(e) {
i <- 0
num <- 0
ceil <- e*10
while(i<(10*e)) {
}
}
fx <- function(e) {
i <- 0
num <- 0
ceil <- e*10
while(i<ceil) {
num <- num + ((e^i)/(factorial(i)))
i <- i + 1
}
message(num)}
fx(1)
exp(1)
fx(10)
exp(10)
fx(100)
fx(50)
fx(20)
exp(20)
3*exp(-x**2)
x <- 1
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
x <- 1.5
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
x <- 0
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
x <- 0.01
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
x <- 0.3
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
x <- 0.5
3*exp(-x**2)
3+((-6*x^2)/2)+((3*x^4)/factorial(4))
require(devtools)
require(devtools)
install.packages("devtools")
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
author("mBraceSquare")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-docs")
publish(user = "mbracesquare", repo = "mbs-slides")
publish(user = "mbracesquare", repo = "mbs-slides")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
date()
?date()
date("%a")
date(sys.time(), "%a")
date()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
slidify("index.Rmd")
publish(user = "mbracesquare", repo = "mbs-slides")
